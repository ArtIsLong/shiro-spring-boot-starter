<?xml version="1.0"?><!DOCTYPE module PUBLIC        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"        "http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd"><!--  Checkstyle configuration that checks the sun coding conventions from:    - the Java Language Specification at      http://java.sun.com/docs/books/jls/second_edition/html/index.html    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/    - the Javadoc guidelines at      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html    - some best practices  Checkstyle is very configurable. Be sure to read the documentation at  http://checkstyle.sf.net (or in your downloaded distribution).  Most Checks are configurable, be sure to consult the documentation.  To completely disable a check, just comment it out or delete it from the file.  Finally, it is worth reading the documentation.--><module name="Checker">    <!-- 检验每个文件末尾是否有一个空行-->    <module name="Translation"/>    <!-- 长度方面的检查 -->    <!-- 文件的最大行数,缺省为1500 -->    <module name="FileLength">        <property name="max" value="1500" />    </module>    <!--    重复代码的检查，超过8行就认为重复，UTF-8格式    本检查一定要放在"TreeWalker"节点前，否则在    Checkclipse中会无法使用。(在ant下可以)    -->    <!--<module name="StrictDuplicateCode">        <property name="min" value="5" />        <property name="charset" value="UTF-8" />    </module>-->    <module name="TreeWalker">        <!-- javadoc的检查 -->        <!-- 检查所有的interface和class -->        <module name="JavadocType" />        <!-- 检查所有方法的javadoc，可以不声明RuntimeException -->        <module name="JavadocMethod">            <property name="allowUndeclaredRTE" value="true" />        </module>        <!-- 检查某个变量的javadoc -->        <!--<module name="JavadocVariable" />-->        <!-- 常量名的检查 -->        <module name="ConstantName"/>        <module name="LocalFinalVariableName"/>        <module name="LocalVariableName"/>        <!-- 变量的检查 -->        <module name="MemberName"/>        <!-- 方法名的检查 -->        <module name="MethodName"/>        <!-- 包路径的检查 -->        <module name="PackageName"/>        <!-- 方法的参数名 -->        <module name="ParameterName"/>        <module name="StaticVariableName"/>        <!-- 命名方面的检查，它们都使用了Sun官方定的规则。 -->        <!-- 类名(class 或interface) 的检查 -->        <module name="TypeName"/>        <!-- 检查多于的导入,如一个类导入了多次 -->        <module name="RedundantImport"/>        <!-- 检查没有使用的导入 -->        <module name="UnusedImports"/>        <!-- 检查使用*号的导入,默认为全部类 -->        <module name="AvoidStarImport"/>        <!-- 检查是否有非法的包,确省检查sun.*;对于某些包是不建议直接调用的 -->        <module name="IllegalImport">            <property name="illegalPkgs" value="sun.*"/>        </module>        <!-- 导入排序 -->        <!-- groups:分组,哪些是一组的 -->        <!-- ordered:同一个组内是否排序,true排序,确省为true -->        <!-- separated:各个组之间是否需要用空行分隔,确省为false -->        <!-- caseSensitive:是否是大小写敏感的,确省是 -->        <!--        <module name="ImportOrder">        <property name="groups" value="java,javax"/>        <property name="ordered" value="true"/>        <property name="separated" value="true"/>        <property name="caseSensitive" value="true"/>        </module>        -->        <!-- 检查方法内可执行语句的个数,确省为30行 -->        <!--        <module name="ExecutableStatementCount">        <property name="max" value="30"/>        </module>        -->        <!-- 每行的最大字符数,缺省为80-->        <module name="LineLength">            <property name="max" value="80"/>        </module>        <!-- 方法不超过100行 -->        <module name="MethodLength">            <property name="max" value="100"/>            <!-- 统计时是否包括空行和以//开始的注释,缺省为统计(true)-->            <property name="countEmpty" value="false"/>        </module>        <!-- 方法的参数个数不超过5个。 -->        <module name="ParameterNumber">            <property name="max" value="5"/>        </module>        <!-- 匿名类的最大行数,缺省为20 -->        <module name="AnonInnerLength">            <property name="max" value="60"/>        </module>        <!-- 确省必须以Abstract开始或者以Factory结束 -->        <!--        <module name="AbstractClassName"/>        -->        <module name="EmptyForIteratorPad"/>        <module name="GenericWhitespace"/>        <module name="MethodParamPad"/>        <module name="NoWhitespaceAfter"/>        <module name="NoWhitespaceBefore"/>        <module name="OperatorWrap"/>        <module name="ParenPad"/>        <module name="TypecastParenPad"/>        <module name="WhitespaceAfter"/>        <module name="WhitespaceAround"/>        <module name="ModifierOrder"/>        <!-- 多余的关键字 -->        <module name="RedundantModifier"/>        <!-- 多余的括号 -->        <module name="AvoidNestedBlocks">            <property name="allowInSwitchCase" value="true" />        </module>        <!-- 检查空块 -->        <module name="EmptyBlock"/>        <module name="LeftCurly"/>        <!-- 所有区域都要使用大括号。 -->        <module name="NeedBraces"/>        <!-- 检查"}",确省在同一行 -->        <module name="RightCurly">            <property name="option" value="alone"/>        </module>        <!-- 变量必须初始化为自己的类型,如果给一个Object类型的变量初始化为null会提示 -->        <!--        <module name="ExplicitInitialization"/>        -->        <!-- 编码方面的检查 -->        <!-- 不许出现空语句 -->        <module name="EmptyStatement"/>        <!-- 每个类都实现了equals()和hashCode() -->        <module name="EqualsHashCode"/>        <!--<module name="HiddenField">            <property name="ignoreSetter" value="true" />            <property name="ignoreConstructorParameter" value="true" />        </module>-->        <module name="IllegalInstantiation"/>        <!-- 不许内部赋值 -->        <module name="InnerAssignment"/>        <!-- 绝对不能容忍魔法数 -->        <!--<module name="MagicNumber"/>-->        <module name="MissingSwitchDefault"/>        <!-- 不许使用未被简化的条件表达式 -->        <module name="SimplifyBooleanExpression"/>        <!-- 不许使用未被简化的布尔返回值 -->        <module name="SimplifyBooleanReturn"/>        <!-- 检查private构造子是否声明为final,这里有个问题,在Java中构造子是不能声明为final的 -->        <module name="FinalClass"/>        <module name="HideUtilityClassConstructor"/>        <module name="InterfaceIsType"/>        <!-- 检查变量的可见性,确省只允许static final 为public,否则只能为private -->        <module name="VisibilityModifier">            <property name="packageAllowed" value="true"/>            <property name="protectedAllowed" value="true"/>        </module>        <!-- 数组的声明是否允许Java的类型,确省为允许,Java类型为String[] xx,C++的类型为String xx[]; -->        <module name="ArrayTypeStyle"/>        <!-- 关于Task,你可以声明自己的Task标识 -->        <module name="TodoComment">            <property name="format" value="TODO"/>        </module>        <!-- 当定义一个常量时,希望使用大写的L来代替小写的l,原因是小写的l和数字1很象 -->        <module name="UpperEll"/>        <!-- 循环控制变量不能被修改 -->        <module name="ModifiedControlVariable" />        <!-- 多余的throw -->        <!--<module name="RedundantThrows" />-->        <!-- String的比较不能用!= 和 == -->        <module name="StringLiteralEquality" />        <!-- if最多嵌套3层 -->        <module name="NestedIfDepth">            <property name="max" value="3" />        </module>        <!-- try最多被嵌套2层 -->        <module name="NestedTryDepth" >            <property name="max" value="2" />        </module>        <!-- 不能catch java.lang.Exception -->        <module name="IllegalCatch">            <property name="illegalClassNames" value="java.lang.Exception" />        </module>        <!-- 限制抛出声明的指定数量,确省为1 -->        <!--        <module name="ThrowsCount"/>        -->        <!-- JUnitTestCase 的核心方法存在。 -->        <!--<module name="JUnitTestCase" />-->        <!-- 一个方法中最多有3个return -->        <module name="ReturnCount">            <property name="max" value="3" />        </module>        <!-- 不许对方法的参数赋值 -->        <module name="ParameterAssignment" />        <!-- 不许有同样内容的String -->        <module name="MultipleStringLiterals" />        <!-- 同一行不能有多个声明 -->        <module name="MultipleVariableDeclarations" />        <!-- 各种量度 -->        <!-- 布尔表达式的复杂度，不超过3 -->        <module name="BooleanExpressionComplexity" >            <property name="max" value="3"/>        </module>        <!-- 类数据的抽象耦合，不超过3 -->        <module name="ClassDataAbstractionCoupling" >            <property name="max" value="3"/>        </module>        <!-- 类的分散复杂度，不超过20 -->        <module name="ClassFanOutComplexity" />        <!-- 函数的分支复杂度，不超过10 -->        <module name="CyclomaticComplexity" />        <!-- NPath复杂度，不超过200 -->        <module name="NPathComplexity" />        <!-- 杂项 -->        <!-- 一般性的代码问题,不好的习惯等,可以多 -->        <!-- 文件中使用了System.out.print等-->        <!--<module name="GenericIllegalRegexp">            <property name="format" value="System\.out\.print"/>            <property name="message" value="bad practice of use System.out.print"/>        </module>        <module name="GenericIllegalRegexp">            <property name="format" value="System\.exit"/>            <property name="message" value="bad practice of use System.exit"/>        </module>        <module name="GenericIllegalRegexp">            <property name="format" value="printStackTrace"/>            <property name="message" value="bad practice of use printStackTrace"/>        </module>-->        <!-- main方法经常会在debug时使用,但发行版本的时候可能并不需要这个方法,提示 -->        <!--        <module name="UncommentedMain"/>        -->        <!-- 检查正确的缩进,这个更象是个人习惯 -->        <!--        <module name="Indentation">        <property name="braceAdjustment" value="4"/>        </module>        -->    </module></module>