/** * $Id: SelfDefinedShiroRealm.java,v 1.0 18/5/4 下午10:44 chenmin Exp $ * <p> */package com.github.shiro.config.shiro;import com.github.shiro.bean.DefaultUser;import lombok.extern.slf4j.Slf4j;import org.apache.shiro.authc.AuthenticationException;import org.apache.shiro.authc.AuthenticationInfo;import org.apache.shiro.authc.AuthenticationToken;import org.apache.shiro.authc.SimpleAuthenticationInfo;import org.apache.shiro.authz.AuthorizationInfo;import org.apache.shiro.authz.SimpleAuthorizationInfo;import org.apache.shiro.realm.AuthorizingRealm;import org.apache.shiro.subject.PrincipalCollection;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;/** * 自定义权限匹配和账号密码匹配 * @author chenmin * @version $Id: SelfDefinedShiroRealm.java,v 1.1 18/5/4 下午10:44 chenmin Exp $ * Created on 18/5/4 下午10:44 */@Slf4j@Componentpublic class SelfDefinedShiroRealm extends AuthorizingRealm {    @Autowired    private ShiroProperties shiroProperties;    /**     * 授权     * @param principals     * @return     */    @Override    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {        SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo();        return authorizationInfo;    }    /**     * 认证     * @param token     * @return     * @throws AuthenticationException     */    @Override    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token)            throws AuthenticationException {        String defaultUserName = shiroProperties.getDefaultUserName();        String defaultPassword = shiroProperties.getDefaultPassword();        SimpleAuthenticationInfo authorizationInfo = new SimpleAuthenticationInfo(                new DefaultUser(defaultUserName, defaultPassword),                defaultPassword,                getName()        );        return authorizationInfo;    }}